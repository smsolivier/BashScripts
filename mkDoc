#!/usr/bin/env python3

''' extract docstrings and make a README markdon ''' 

import os 
import sys 

import re 

if (len(sys.argv) == 3):
	name = sys.argv[1] 
	desc = sys.argv[2] 
else:
	name = '' 
	desc = '' 

def numLines(f):

	file = open(f, 'r')
	x = 0 
	for line in file:

		x += 1 

	file.close()

	return x 

def getDoc(out, pyf, comment, head):

	docs = [] # store doc strings 

	# get doc string 
	for i in range(len(pyf)):

		f = open(pyf[i], 'r')

		string = '' # store doc string 

		for line in f: 

			if line.startswith(comment) and line.strip().endswith(comment):

				string = line.strip().strip(comment)[1:] + '\n'

			elif line.startswith(comment) and not(line.strip().endswith(comment)):

				string = line + '\n'

				line = next(f)

				while comment not in line:

					spl = re.split(r'(\t*)', line)

					tab = spl[1] 

					if (len(tab) > 1):

						tab = tab[1:-1] + '* ' 

						string += tab + spl[2] + '\n'

					else:

						string += line.strip('\t') + '\n'

					line = next(f)

				string = string[4:]

		# print(pyf[i])
		# print(string)

		f.close()

		out.write(head + pyf[i] + '\n' + string + '\n')

if (os.path.isfile('README.md')):

	f = open('README.md', 'r')

	line = next(f)

	name = line.strip('# ') 
	print(name)

	desc = '' 

	line = next(f)
	while not(line.startswith('\n')):

		desc += line 

		line = next(f)

	print(desc)

	f.close()

files = os.listdir('.') # get current directory files 

pyf = [] # store python file names 

dr = [] # store names of directories 

# check if python file or directory 
for i in range(len(files)):

	if files[i].endswith('.py'):

		pyf.append(files[i])

	elif os.path.isdir(files[i]):

		dr.append(files[i])

# pyf = sorted(pyf, key=lambda v: v.upper()) # ignore case 
pyf = sorted(pyf, key=lambda f: numLines(f), reverse=True) # sort by length of file 

print(pyf)

comment = '\'\'\''

out = open('README.md', 'w')

out.write('# ' + name + '\n' + desc + '\n\n')

for i in range(len(dr)):

	if (os.path.isfile(dr[i] + '/README.md')):

		f = open(dr[i] + '/README.md', 'r')

		name = next(f)
		desc = next(f)

		out.write('## ' + dr[i] + '/\n' + desc + '\n')

		f.close()

head = '## ' 

getDoc(out, pyf, comment, head)

out.close()