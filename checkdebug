#!/usr/bin/env python3-3.5.1

import subprocess
import os 

import sys 

# get username from cmd line if available 
if (len(sys.argv) == 2):

	username = sys.argv[1]

else:

	username = os.getlogin() # get username 

# colored output 
N  = '\033[0m' # normal 
C  = '\033[31m' # red 
G = '\033[32m' # green 
Y = '\033[33m' # yellow

hostname = os.uname()[1] 

if (hostname.startswith('rztopaz')):

	total = 16

elif (hostname.startswith('rztrona')):

	total = 2

elif (hostname.startswith('quartz')):

	total = 16

elif (hostname.startswith('rzhasgpu')):

	total = 2

elif (hostname.startswith('rzgenie')):

	total = 43 

else:

	print('number of debug nodes not defined for', hostname)

queue = subprocess.run(['squeue'], stdout=subprocess.PIPE).stdout.decode('utf-8').split('\n')

nodes = 0 # store number of nodes in use 
visit = 0 # number of visit sessions 
mxterm = 0 # number of mxterms 
mynodes = 0 # store number of nodes for me 
waiting = 0 # store number of eligible jobs 
for i in range(len(queue)):

	# get debug lines 
	if ('pdebug' in queue[i]):

		split = queue[i].split()

		if (split[4] == 'R'):

			# sum up nodes in use 
			nodes += int(split[-2])

			# check for visit 
			if ('engine_p' in queue[i]):

				visit += 1

			# check for mxterms
			if ('mxterm' in queue[i]):

				mxterm += 1

		elif (split[4] == 'PD'):

			waiting += 1

		# string = '{: <10}{: ^10}{: ^10}{: >4}'.format(
			# split[3], split[2], split[5], split[6])
		string = queue[i]

		if (username in queue[i]):

			mynodes += int(queue[i].split()[-2])

			print(C + string + N)

		else:

			print(string)

print()
print('total usage:')
print('{} nodes running'.format(nodes))
print('{} nodes waiting'.format(waiting))
print('{} nodes running visit'.format(visit))
print('{} nodes running mxterm'.format(mxterm))
print('{:.2%} full'.format(nodes/total))

print()
print(username, 'usage:')
print('{} nodes running'.format(mynodes))
print('{:.2%} usage'.format(mynodes/total))